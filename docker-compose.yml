version: "3.9"
services:
  web:
    build: .
    command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - db
    environment:
      - "DJANGO_SECRET_KEY=django-insecure-hv1(e0r@v4n4m6gqdz%dn(60o=dsy8&@0_lbs8p-v3u^bs\
4)xl"
      - "DJANGO_DEBUG=True"

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"



volumes:
  postgres_data:










#version: '3.7'
#
#services:
##  bot:
##    image: "${BOT_IMAGE_NAME:-tg_bot-image}"
##    container_name: "${BOT_CONTAINER_NAME:-tg_bot-container}"
##    build:
##      context: ../Django_bot
##    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
##    stop_signal: SIGINT
##    volumes:
##      - .:/usr/src/app/${BOT_NAME:-tg_bot}
##      - /var/lib/telegram-bot-api:/var/lib/telegram-bot-api
##    command: python3 -m bot
##    restart: unless-stopped
##    env_file:
##      - "../Django_bot/.env"
##    networks:
##      - tg_bot
##    depends_on:
##      - db
#
#  db:
#    image: postgres
#    restart: always
#    environment:
#      POSTGRES_USER: "${POSTGRES_USER}"
#      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
#      POSTGRES_DB: "${POSTGRES_DB}"
#    ports:
#      - "5432:5432"
#    networks:
#      - tg_bot
#
#  web:
#    build: .
#    ports:
#      - 8000:8000
#    command: ["sh", "./web/start.sh"]
#    volumes:
#      - .:/app
#    env_file:
#      - .env
#    depends_on:
#      - db
#
#
#
#networks:
#  tg_bot:
#    driver: bridge


#  api:
#    image: aiogram/telegram-bot-api:latest
#    restart: always
#    env_file:
#      - "../Payment_bot/.env"
#    ports:
#      - "8080:8080"
#    volumes:
#      - /var/lib/telegram-bot-api:/var/lib/telegram-bot-api
#
#    networks:
#      - bot













#
#version: '3.7'
#
#services:
#  bot:
#    image: "${BOT_IMAGE_NAME:-tg_bot-image}"
#    container_name: "${BOT_CONTAINER_NAME:-tg_bot-container}"
#    build:
#      context: .
#    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
#    stop_signal: SIGINT
#    volumes:
#      - .:/usr/src/app/${BOT_NAME:-tg_bot}
#      - /var/lib/telegram-bot-api:/var/lib/telegram-bot-api
#    command: python3 -m bot
#    restart: unless-stopped
#    env_file:
#      - "../Payment_bot/.env"
#    networks:
#      - bot
#    depends_on:
#      - db
#      - quart
#
#  quart:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    command: hypercorn --bind 0.0.0.0:5000 app.py:app
#    restart: unless-stopped
#    ports:
#      - "5000:5000"
#    depends_on:
#      - db
#    networks:
#      - bot
#
#
#  db:
#    image: postgres
#    restart: always
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: 7aB8xYp3
#      POSTGRES_DB: bot_db
#    ports:
#      - "5432:5432"
#    volumes:
#      - ./pgdata:/var/lib/postgresql/data
#    networks:
#      - bot
#
#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - 80:8080
#    networks:
#      - bot
#
#  api:
#    image: aiogram/telegram-bot-api:latest
#    restart: always
#    env_file:
#      - "../Payment_bot/.env"
#    ports:
#      - "8080:8080"
#    volumes:
#      - /var/lib/telegram-bot-api:/var/lib/telegram-bot-api
#
#    networks:
#      - bot
#
#
#networks:
#  bot:
#    driver: bridge